"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3547],{4174:(n,e,t)=>{t.d(e,{A:()=>o});const o=t.p+"assets/images/react-example-593bc11f21d282ca83fda651a573b254.png"},7148:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"react/examples","title":"React Package Examples","description":"Complete examples demonstrating how to use the Page Builder React package with custom components, dynamic attributes, and state management.","source":"@site/docs/react/examples.md","sourceDirName":"react","slug":"/react/examples","permalink":"/page-builder/docs/react/examples","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"React Package Examples","sidebar_label":"Examples"},"sidebar":"docs","previous":{"title":"State Management","permalink":"/page-builder/docs/configuration/features/state-management"},"next":{"title":"best-practices","permalink":"/page-builder/docs/guides/best-practices"}}');var i=t(4848),r=t(8453);const a={title:"React Package Examples",sidebar_label:"Examples"},s="React Package Examples",l={},c=[{value:"Basic Setup",id:"basic-setup",level:2},{value:"Installation",id:"installation",level:3},{value:"Simple Configuration",id:"simple-configuration",level:3},{value:"Dynamic Attributes Example",id:"dynamic-attributes-example",level:2},{value:"Using Input and Formula Attributes",id:"using-input-and-formula-attributes",level:3},{value:"Step 1: Define the Global Execution Function",id:"step-1-define-the-global-execution-function",level:4},{value:"Step 2: Define Component Attributes",id:"step-2-define-component-attributes",level:4},{value:"Custom Components Example",id:"custom-components-example",level:2},{value:"Creating a Custom Color Picker Component",id:"creating-a-custom-color-picker-component",level:3},{value:"Step 1: Build the Color Picker Component",id:"step-1-build-the-color-picker-component",level:4},{value:"Step 2: Create Settings Panel for Color Picker",id:"step-2-create-settings-panel-for-color-picker",level:4},{value:"Creating a Custom Rating Component",id:"creating-a-custom-rating-component",level:3},{value:"Step 1: Set Up State Management with Zustand",id:"step-1-set-up-state-management-with-zustand",level:4},{value:"Step 2: Build the Rating Component",id:"step-2-build-the-rating-component",level:4},{value:"Step 3: Create Rating Settings Panel",id:"step-3-create-rating-settings-panel",level:4},{value:"Creating a Custom Landing Page Component",id:"creating-a-custom-landing-page-component",level:3},{value:"Complete Integration Example",id:"complete-integration-example",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Component Design",id:"component-design",level:3},{value:"State Management",id:"state-management",level:3},{value:"Performance",id:"performance",level:3},{value:"Accessibility",id:"accessibility",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Custom Component Not Showing",id:"custom-component-not-showing",level:3},{value:"State Not Persisting",id:"state-not-persisting",level:3},{value:"Formula Not Calculating",id:"formula-not-calculating",level:3},{value:"Resources",id:"resources",level:2}];function d(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"react-package-examples",children:"React Package Examples"})}),"\n",(0,i.jsx)(e.p,{children:"Complete examples demonstrating how to use the Page Builder React package with custom components, dynamic attributes, and state management."}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,i.jsx)(e.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"npm install @mindfiredigital/page-builder-react\n"})}),"\n",(0,i.jsx)(e.h3,{id:"simple-configuration",children:"Simple Configuration"}),"\n",(0,i.jsx)(e.p,{children:"The most basic setup with built-in components:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"import { PageBuilderReact } from '@mindfiredigital/page-builder-react';\n\nconst App = () => {\n  const dynamicComponents = {\n    Basic: [\n      { name: 'button' },\n      { name: 'header' },\n      { name: 'text' },\n      { name: 'table' },\n    ],\n    Extra: ['landingpage'],\n  };\n\n  return (\n    <div>\n      <PageBuilderReact config={dynamicComponents} />\n    </div>\n  );\n};\n\nexport default App;\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"dynamic-attributes-example",children:"Dynamic Attributes Example"}),"\n",(0,i.jsx)(e.h3,{id:"using-input-and-formula-attributes",children:"Using Input and Formula Attributes"}),"\n",(0,i.jsx)(e.p,{children:"This example demonstrates how to use dynamic attributes with calculations:"}),"\n",(0,i.jsx)(e.h4,{id:"step-1-define-the-global-execution-function",children:"Step 1: Define the Global Execution Function"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// utils/executeFormula.ts\n/**\n * The global execution function that calculates formula attributes.\n * Keys in inputValues match the 'key' properties of Input and Constant attributes.\n *\n * @param {object} inputValues - Object with keys like 'input-a-key', 'input-b-key'\n * @returns {object} Object with keys matching Formula attribute keys\n */\nexport const localExecuteFunction = (inputValues: Record<string, any>) => {\n  const A = Number(inputValues['input-a-key']) || 0;\n  const B = Number(inputValues['input-b-key']) || 0;\n\n  const sumResult = A + B;\n  const productResult = A * B;\n\n  return {\n    'formula-sum-key': sumResult,\n    'formula-product-key': productResult,\n  };\n};\n"})}),"\n",(0,i.jsx)(e.h4,{id:"step-2-define-component-attributes",children:"Step 2: Define Component Attributes"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// App.tsx\nimport { PageBuilderReact, ComponentAttribute } from '@mindfiredigital/page-builder-react';\nimport { localExecuteFunction } from './utils/executeFormula';\n\nconst App = () => {\n  const dynamicAttributes: ComponentAttribute[] = [\n    // Input attributes\n    {\n      id: 'input-a',\n      type: 'Input',\n      input_type: 'number',\n      title: 'Input A',\n      value: 10,\n      default_value: 10,\n      key: 'input-a-key',\n      execute_order: 1,\n      editable: true,\n    },\n    {\n      id: 'input-b',\n      type: 'Input',\n      input_type: 'number',\n      title: 'Input B',\n      value: 5,\n      default_value: 5,\n      key: 'input-b-key',\n      execute_order: 2,\n      editable: true,\n    },\n\n    // Formula attributes\n    {\n      id: 'formula-sum',\n      type: 'Formula',\n      input_type: 'number',\n      title: 'Total Sum',\n      value: '{Input A} + {Input B}',\n      default_value: 0,\n      key: 'formula-sum-key',\n      execute_order: 3,\n    },\n    {\n      id: 'formula-product',\n      type: 'Formula',\n      input_type: 'number',\n      title: 'Total Product',\n      value: '{Input A} * {Input B}',\n      default_value: 1,\n      key: 'formula-product-key',\n      execute_order: 4,\n    },\n  ];\n\n  const dynamicComponents = {\n    Basic: [\n      { name: 'button' },\n      {\n        name: 'header',\n        attributes: dynamicAttributes,\n        globalExecuteFunction: localExecuteFunction\n      },\n      {\n        name: 'text',\n        attributes: dynamicAttributes,\n        globalExecuteFunction: localExecuteFunction\n      },\n      {\n        name: 'table',\n        attributes: dynamicAttributes,\n        globalExecuteFunction: localExecuteFunction\n      },\n    ],\n    Extra: ['landingpage'],\n  };\n\n  return (\n    <div>\n      <PageBuilderReact config={dynamicComponents} />\n    </div>\n  );\n};\n\nexport default App;\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"custom-components-example",children:"Custom Components Example"}),"\n",(0,i.jsx)(e.h3,{id:"creating-a-custom-color-picker-component",children:"Creating a Custom Color Picker Component"}),"\n",(0,i.jsx)(e.h4,{id:"step-1-build-the-color-picker-component",children:"Step 1: Build the Color Picker Component"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// components/ColorPicker.tsx\nimport React, { forwardRef } from 'react';\n\ninterface ColorPickerProps {\n  componentId?: string;\n  color?: string;\n}\n\nconst ColorPicker = forwardRef<HTMLDivElement, ColorPickerProps>(\n  (props, forwardedRef) => {\n    const { componentId, color = '#FF5733' } = props;\n\n    return (\n      <div\n        ref={forwardedRef}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '200px',\n          height: '150px',\n          border: '2px solid #ccc',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9',\n          padding: '16px',\n        }}\n      >\n        <label htmlFor=\"color-input\" style={{ marginBottom: '12px', fontWeight: 600 }}>\n          Select Color:\n        </label>\n        <input\n          id=\"color-input\"\n          type=\"color\"\n          defaultValue={color}\n          style={{\n            width: '100px',\n            height: '50px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n          }}\n        />\n        <p style={{ marginTop: '12px', fontSize: '0.875rem', color: '#666' }}>\n          Current: {color}\n        </p>\n      </div>\n    );\n  }\n);\n\nColorPicker.displayName = 'ColorPicker';\nexport default ColorPicker;\n"})}),"\n",(0,i.jsx)(e.h4,{id:"step-2-create-settings-panel-for-color-picker",children:"Step 2: Create Settings Panel for Color Picker"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// settings/ColorPickerSettings.tsx\nimport React, { forwardRef } from 'react';\nimport { Box, Button, Typography } from '@mui/material';\n\ninterface ColorPickerSettingsProps {\n  targetComponentId: string;\n}\n\nconst ColorPickerSettings = forwardRef<unknown, ColorPickerSettingsProps>(\n  (props, forwardedRef) => {\n    const { targetComponentId } = props;\n\n    const handleRandomColor = () => {\n      const randomColor = '#' + Math.floor(Math.random() * 16777215).toString  };\n\n    return (\n      <Box\n        ref={forwardedRef}\n        sx={{\n          p: 2,\n          border: '1px solid #e0e0e0',\n          borderRadius: '4px',\n          mt: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n        }}\n      >\n        <Typography variant=\"h6\" sx={{ mb: 1, fontSize: '1rem' }}>\n          Color Picker Settings\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleRandomColor}\n          sx={{ textTransform: 'none' }}\n        >\n          Generate Random Color\n        </Button>\n      </Box>\n    );\n  }\n);\n\nexport default ColorPickerSettings;\n"})}),"\n",(0,i.jsx)(e.h3,{id:"creating-a-custom-rating-component",children:"Creating a Custom Rating Component"}),"\n",(0,i.jsx)(e.h4,{id:"step-1-set-up-state-management-with-zustand",children:"Step 1: Set Up State Management with Zustand"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// store/RatingStore.ts\nimport { create } from 'zustand';\n\ninterface RatingState {\n  ratings: Record<string, number | null>;\n  resetRating: (componentId: string) => void;\n  setRatingToMax: (componentId: string) => void;\n  incrementRating: (componentId: string) => void;\n  decrementRating: (componentId: string) => void;\n  setValue: (componentId: string, value: number | null) => void;\n  getRating: (componentId: string) => number | null;\n}\n\nexport const useRatingStore = create<RatingState>((set, get) => ({\n  ratings: {},\n\n  resetRating: (componentId: string) => {\n    set(state => ({\n      ratings: { ...state.ratings, [componentId]: 0 },\n    }));\n  },\n\n  setRatingToMax: (componentId: string) => {\n    set(state => ({\n      ratings: { ...state.ratings, [componentId]: 5 },\n    }));\n  },\n\n  incrementRating: (componentId: string) => {\n    const current = get().ratings[componentId] ?? 2;\n    const newValue = Math.min(current + 1, 5);\n    set(state => ({\n      ratings: { ...state.ratings, [componentId]: newValue },\n    }));\n  },\n\n  decrementRating: (componentId: string) => {\n    const current = get().ratings[componentId] ?? 2;\n    const newValue = Math.max(current - 1, 0);\n    set(state => ({\n      ratings: { ...state.ratings, [componentId]: newValue },\n    }));\n  },\n\n  setValue: (componentId: string, value: number | null) => {\n    set(state => ({\n      ratings: { ...state.ratings, [componentId]: value },\n    }));\n  },\n\n  getRating: (componentId: string) => {\n    return get().ratings[componentId] ?? 2;\n  },\n}));\n"})}),"\n",(0,i.jsx)(e.h4,{id:"step-2-build-the-rating-component",children:"Step 2: Build the Rating Component"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// components/CustomRating.tsx\nimport React, { forwardRef } from 'react';\nimport { Box, Rating, Typography } from '@mui/material';\nimport { useRatingStore } from '../store/RatingStore';\n\ninterface CustomRatingProps {\n  componentId?: string;\n}\n\nconst CustomRating = forwardRef<HTMLDivElement, CustomRatingProps>(\n  (props, forwardedRef) => {\n    const { componentId } = props;\n    const currentComponentId = componentId || 'default';\n\n    const value = useRatingStore(state => state.getRating(currentComponentId));\n    const setValue = useRatingStore(state => state.setValue);\n    const maxValue = 5;\n\n    const handleChange = (\n      event: React.SyntheticEvent<Element, Event>,\n      newValue: number | null\n    ) => {\n      setValue(currentComponentId, newValue);\n    };\n\n    return (\n      <Box\n        ref={forwardedRef}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '200px',\n          height: '100px',\n          border: '2px dashed #94a3b8',\n          borderRadius: '8px',\n          backgroundColor: '#f1f5f9',\n          fontFamily: 'sans-serif',\n          fontSize: '14px',\n          color: '#64748b',\n          margin: '10px',\n          padding: '5px',\n        }}\n      >\n        <Typography component=\"legend\">Controlled Rating</Typography>\n        <Rating\n          name=\"simple-controlled\"\n          value={value}\n          max={maxValue}\n          onChange={handleChange}\n        />\n        <Typography variant=\"body2\">\n          Current Value: {value !== null ? value : 'N/A'}\n        </Typography>\n      </Box>\n    );\n  }\n);\n\nCustomRating.displayName = 'CustomRating';\nexport default CustomRating;\n"})}),"\n",(0,i.jsx)(e.h4,{id:"step-3-create-rating-settings-panel",children:"Step 3: Create Rating Settings Panel"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// settings/CustomRatingSettings.tsx\nimport React, { forwardRef } from 'react';\nimport { Box, Button, Typography } from '@mui/material';\nimport { useRatingStore } from '../store/RatingStore';\n\ninterface CustomRatingSettingsProps {\n  targetComponentId: string;\n}\n\nconst CustomRatingSettings = forwardRef<unknown, CustomRatingSettingsProps>(\n  (props, forwardedRef) => {\n    const { targetComponentId } = props;\n\n    const resetRating = useRatingStore(state => state.resetRating);\n    const setRatingToMax = useRatingStore(state => state.setRatingToMax);\n    const incrementRating = useRatingStore(state => state.incrementRating);\n    const decrementRating = useRatingStore(state => state.decrementRating);\n\n    return (\n      <Box\n        ref={forwardedRef}\n        sx={{\n          p: 2,\n          border: '1px solid #e0e0e0',\n          borderRadius: '4px',\n          mt: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n        }}\n      >\n        <Typography variant=\"h6\" component=\"h3\" sx={{ mb: 1, fontSize: '1rem' }}>\n          Rating Controls\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => resetRating(targetComponentId)}\n          sx={{ textTransform: 'none', borderRadius: '8px' }}\n        >\n          Reset Rating\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => setRatingToMax(targetComponentId)}\n          sx={{ textTransform: 'none', borderRadius: '8px' }}\n        >\n          Set Max Rating\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => incrementRating(targetComponentId)}\n          sx={{ textTransform: 'none', borderRadius: '8px' }}\n        >\n          Increment Rating\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => decrementRating(targetComponentId)}\n          sx={{ textTransform: 'none', borderRadius: '8px' }}\n        >\n          Decrement Rating\n        </Button>\n      </Box>\n    );\n  }\n);\n\nexport default CustomRatingSettings;\n"})}),"\n",(0,i.jsx)(e.h3,{id:"creating-a-custom-landing-page-component",children:"Creating a Custom Landing Page Component"}),"\n",(0,i.jsx)(e.p,{children:"The Landing Page component demonstrates how to build a fully-featured, responsive component with embedded styles and complex layouts:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"// components/LandingPage.tsx\nimport React, { useState, forwardRef, Ref, useEffect } from 'react';\n\ninterface LandingPageProps {\n  componentId?: string;\n}\n\nconst LandingPage = forwardRef<HTMLDivElement, LandingPageProps>(\n  (props, forwardedRef) => {\n    const [isMobile, setIsMobile] = useState<boolean>(false);\n    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState<boolean>(false);\n\n    useEffect(() => {\n      const checkMobile = () => {\n        setIsMobile(window.innerWidth < 960);\n      };\n      checkMobile();\n      window.addEventListener('resize', checkMobile);\n      return () => window.removeEventListener('resize', checkMobile);\n    }, []);\n\n    const toggleDrawer = (open: boolean) => (\n      event: React.KeyboardEvent | React.MouseEvent\n    ): void => {\n      if (\n        event.type === 'keydown' &&\n        ((event as React.KeyboardEvent).key === 'Tab' ||\n          (event as React.KeyboardEvent).key === 'Shift')\n      ) {\n        return;\n      }\n      setIsMobileMenuOpen(open);\n    };\n\n    const navItems = [\n      { name: 'Features', href: '#features' },\n      { name: 'Pricing', href: '#pricing' },\n      { name: 'About', href: '#about' },\n      { name: 'Contact', href: '#contact' },\n    ];\n\n    return (\n      <div ref={forwardedRef} className=\"lp-body\">\n        <style>\n          {`\n            @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap');\n            * { box-sizing: border-box; margin: 0; padding: 0; }\n            html { scroll-behavior: smooth; }\n            .lp-body {\n              font-family: 'Inter', sans-serif;\n              min-height: 100vh;\n              background: linear-gradient(to bottom right, #F3E5F5, #FFFFFF 50%, #E3F2FD);\n              color: #212121;\n            }\n            .lp-container {\n              max-width: 1280px;\n              margin: 0 auto;\n              padding: 0 16px;\n            }\n            .lp-navbar {\n              position: sticky;\n              top: 0;\n              z-index: 1000;\n              background-color: rgba(255, 255, 255, 0.8);\n              backdrop-filter: blur(10px);\n              box-shadow: 0 0 10px rgba(0,0,0,0.1);\n            }\n            .lp-navbar-content {\n              display: flex;\n              justify-content: space-between;\n              align-items: center;\n              height: 64px;\n            }\n            .lp-logo {\n              width: 40px;\n              height: 40px;\n              background: linear-gradient(to bottom right, #9C27B0, #2196F3);\n              border-radius: 8px;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              color: white;\n              font-weight: bold;\n              font-size: 1.25rem;\n            }\n            .lp-nav { display: flex; align-items: center; gap: 16px; }\n            .lp-nav a { text-decoration: none; color: #757575; }\n            .lp-button {\n              border: none;\n              cursor: pointer;\n              padding: 12px 32px;\n              border-radius: 8px;\n              font-weight: 600;\n              transition: all 0.3s;\n            }\n            .lp-gradient-button {\n              background: linear-gradient(45deg, #9C27B0 30%, #2196F3 90%);\n              color: white;\n            }\n            .lp-gradient-button:hover {\n              transform: scale(1.05);\n              box-shadow: 0 6px 10px rgba(156, 39, 176, 0.5);\n            }\n            .lp-outlined-button {\n              background: transparent;\n              color: #9C27B0;\n              border: 2px solid #9C27B0;\n            }\n            .lp-hero {\n              padding: 120px 0;\n              text-align: center;\n              position: relative;\n              overflow: hidden;\n            }\n            .lp-hero-title {\n              font-size: 4rem;\n              font-weight: 800;\n              margin-bottom: 24px;\n              background: linear-gradient(to right, #9C27B0, #2196F3);\n              -webkit-background-clip: text;\n              -webkit-text-fill-color: transparent;\n            }\n            .lp-hero-subtitle {\n              font-size: 1.25rem;\n              color: #616161;\n              margin-bottom: 40px;\n            }\n            .lp-cta-buttons {\n              display: flex;\n              gap: 16px;\n              justify-content: center;\n            }\n            .lp-features {\n              padding: 80px 0;\n              background: white;\n            }\n            .lp-features-grid {\n              display: grid;\n              grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n              gap: 24px;\n              margin-top: 48px;\n            }\n            .lp-feature-card {\n              padding: 24px;\n              border-radius: 8px;\n              background: linear-gradient(to bottom right, #F3E5F5, #E3F2FD);\n              transition: transform 0.3s;\n            }\n            .lp-feature-card:hover {\n              transform: scale(1.03);\n            }\n            @media (max-width: 960px) {\n              .lp-hero { padding: 80px 0; }\n              .lp-hero-title { font-size: 2.5rem; }\n              .lp-cta-buttons { flex-direction: column; }\n              .lp-nav { display: none; }\n            }\n          `}\n        </style>\n\n        {/* Navigation */}\n        <header className=\"lp-navbar\">\n          <div className=\"lp-container\">\n            <div className=\"lp-navbar-content\">\n              <div className=\"lp-logo\">PB</div>\n              {!isMobile && (\n                <nav className=\"lp-nav\">\n                  {navItems.map((item) => (\n                    <a key={item.name} href={item.href}>\n                      {item.name}\n                    </a>\n                  ))}\n                  <button className=\"lp-button lp-gradient-button\">\n                    Sign In\n                  </button>\n                </nav>\n              )}\n            </div>\n          </div>\n        </header>\n\n        {/* Hero Section */}\n        <section className=\"lp-hero\">\n          <div className=\"lp-container\">\n            <h1 className=\"lp-hero-title\">Build Amazing Web Experiences</h1>\n            <p className=\"lp-hero-subtitle\">\n              Create stunning, responsive pages with our drag-and-drop builder\n            </p>\n            <div className=\"lp-cta-buttons\">\n              <button className=\"lp-button lp-gradient-button\">\n                Get Started Free\n              </button>\n              <button className=\"lp-button lp-outlined-button\">\n                Watch Demo\n              </button>\n            </div>\n          </div>\n        </section>\n\n        {/* Features Section */}\n        <section className=\"lp-features\">\n          <div className=\"lp-container\">\n            <h2 style={{ textAlign: 'center', fontSize: '2rem', marginBottom: 12 }}>\n              Powerful Features\n            </h2>\n            <p style={{ textAlign: 'center', color: '#616161', marginBottom: 48 }}>\n              Everything you need to create amazing web experiences\n            </p>\n            <div className=\"lp-features-grid\">\n              {[\n                {\n                  title: 'Lightning Fast',\n                  description: 'Optimized performance for instant loading',\n                },\n                {\n                  title: 'Collaborative',\n                  description: 'Work together with your team in real-time',\n                },\n                {\n                  title: 'Easy to Use',\n                  description: 'Intuitive interface anyone can master',\n                },\n                {\n                  title: 'Premium Quality',\n                  description: 'Professional results every time',\n                },\n              ].map((feature) => (\n                <div key={feature.title} className=\"lp-feature-card\">\n                  <h3 style={{ marginBottom: 8 }}>{feature.title}</h3>\n                  <p style={{ color: '#616161' }}>{feature.description}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n);\n\nLandingPage.displayName = 'LandingPage';\nexport default LandingPage;\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Key Features of the Landing Page Component:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Responsive Design"}),": Adapts seamlessly to mobile and desktop viewports"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Embedded Styles"}),": CSS is scoped within the component for better encapsulation"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Dynamic State"}),": Tracks mobile view state and manages menu interactions"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Real-world Layout"}),": Demonstrates navigation, hero section, features grid"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Forward Ref"}),": Properly forwards ref for integration with Page Builder"]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"complete-integration-example",children:"Complete Integration Example"}),"\n",(0,i.jsx)(e.p,{children:"Here's a complete app setup with all custom components integrated, including the Landing Page component:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:'// App.tsx\nimport { PageBuilderReact, ComponentAttribute } from \'@mindfiredigital/page-builder-react\';\nimport ColorPicker from \'./components/ColorPicker\';\nimport CustomRating from \'./components/CustomRating\';\nimport CustomRatingSettings from \'./settings/CustomRatingSettings\';\nimport Image from \'./components/Image\';\nimport LandingPage from \'./components/LandingPage\';\nimport { localExecuteFunction } from \'./utils/executeFormula\';\nimport \'./App.css\';\n\nconst App = () => {\n  // Define dynamic attributes for calculations\n  const dynamicAttributes: ComponentAttribute[] = [\n    {\n      id: \'input-a\',\n      type: \'Input\',\n      input_type: \'number\',\n      title: \'Input A\',\n      value: 10,\n      key: \'input-a-key\',\n      execute_order: 1,\n      editable: true,\n      default_value: 10,\n    },\n    {\n      id: \'input-b\',\n      type: \'Input\',\n      input_type: \'number\',\n      title: \'Input B\',\n      value: 5,\n      key: \'input-b-key\',\n      execute_order: 2,\n      editable: true,\n      default_value: 5,\n    },\n    {\n      id: \'formula-sum\',\n      type: \'Formula\',\n      title: \'Total Sum\',\n      value: \'{Input A} + {Input B}\',\n      key: \'formula-sum-key\',\n      execute_order: 3,\n    },\n    {\n      id: \'formula-product\',\n      type: \'Formula\',\n      title: \'Total Product\',\n      value: \'{Input A} * {Input B}\',\n      key: \'formula-product-key\',\n      execute_order: 4,\n    },\n  ];\n\n  // Configure built-in components with attributes\n  const dynamicComponents = {\n    Basic: [\n      { name: \'button\' },\n      {\n        name: \'header\',\n        attributes: dynamicAttributes,\n        globalExecuteFunction: localExecuteFunction\n      },\n      {\n        name: \'text\',\n        attributes: dynamicAttributes,\n        globalExecuteFunction: localExecuteFunction\n      },\n      {\n        name: \'table\',\n        attributes: dynamicAttributes,\n        globalExecuteFunction: localExecuteFunction\n      },\n    ],\n    Extra: [\'landingpage\'],\n  };\n\n  // Register all custom components\n  const customComponents = {\n    ColorPicker: {\n      component: ColorPicker,\n      svg: `<svg width="24" height="24" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M8 16L3.54 12.34C1.93 11.02 1 9.04 1 6.96C1 3.12 4.16 0 8 0C11.84 0 15 3.12 15 6.96C15 9.04 14.07 11.02 12.46 12.34L8 16Z" fill="currentColor"/>\n      </svg>`,\n      title: \'Color Picker Component\',\n    },\n    CustomRating: {\n      component: CustomRating,\n      svg: `<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n        <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"/>\n      </svg>`,\n      title: \'Custom Rating Component\',\n      settingsComponent: CustomRatingSettings,\n    },\n    Image: {\n      component: Image,\n      svg: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <rect x="3" y="3" width="18" height="18" stroke="currentColor" stroke-width="2"/>\n        <path d="M3 16L8 11L13 16L21 8" stroke="currentColor" stroke-width="2"/>\n      </svg>`,\n      title: \'Image Component\',\n    },\n    LandingPage: {\n      component: LandingPage,\n      svg: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <rect x="3" y="3" width="18" height="18" stroke="currentColor" stroke-width="2"/>\n        <line x1="3" y1="9" x2="21" y2="9" stroke="currentColor" stroke-width="2"/>\n        <line x1="9" y1="21" x2="9" y2="9" stroke="currentColor" stroke-width="2"/>\n      </svg>`,\n      title: \'Landing Page\',\n    },\n  };\n\n  return (\n    <div>\n      <PageBuilderReact\n        config={dynamicComponents}\n        customComponents={customComponents}\n      />\n    </div>\n  );\n};\n\nexport default App;\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"What This Example Demonstrates:"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Dynamic Attributes"}),": Two input fields (Input A, Input B) that calculate sum and product in real-time"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Multiple Custom Components"}),": Color Picker, Rating (with state management), Image, and Landing Page"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Settings Panels"}),": Rating component includes a dedicated settings panel for user controls"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"SVG Icons"}),": Custom icons for each component in the sidebar"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Responsive Design"}),": Landing Page component adapts to different screen sizes"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Real-world Integration"}),": Shows how to tie everything together in a production-ready application"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Visual Example:"})}),"\n",(0,i.jsx)(e.p,{children:"The Page Builder with these components looks like this in practice:"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.img,{alt:"Page Builder with Landing Page Component",src:t(4174).A+"",width:"1850",height:"968"}),"\n",(0,i.jsx)(e.em,{children:"Full Page Builder interface showing the Landing Page component with drag-and-drop editor and attribute controls"})]}),"\n",(0,i.jsx)(e.p,{children:"On the left sidebar, you'll see all custom components (Color Picker, Custom Rating, Image, Landing Page) ready to be dragged onto the canvas. The Landing Page component renders a complete landing page template that can be further customized through the Page Builder's visual editor."}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(e.h3,{id:"component-design",children:"Component Design"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Always use forwardRef"}),": Custom components should accept and forward refs to the DOM element"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Provide displayName"}),": Set ",(0,i.jsx)(e.code,{children:"displayName"})," on forwardRef components for better debugging"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Use Optional Props"}),": Design components with flexible, optional props for reusability"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Consistent Styling"}),": Use a CSS module or styled-components for maintainable styling"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"state-management",children:"State Management"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Use Zustand for Cross-Component State"}),": When multiple component instances need shared state, use Zustand stores"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Namespace State by Component ID"}),": Use unique component IDs as keys to isolate state between instances"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Keep State Minimal"}),": Only store essential state; derive other values when possible"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"performance",children:"Performance"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Memoize Components"}),": Use ",(0,i.jsx)(e.code,{children:"React.memo"})," for custom components to prevent unnecessary re-renders"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Lazy Load Complex Components"}),": Consider code splitting for heavyweight custom components"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Optimize Execution Functions"}),": Keep ",(0,i.jsx)(e.code,{children:"globalExecuteFunction"})," logic efficient to avoid performance degradation"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"accessibility",children:"Accessibility"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Use Semantic HTML"}),": Prefer semantic elements over divs"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Add ARIA Labels"}),": Include ",(0,i.jsx)(e.code,{children:"aria-label"})," and other ARIA attributes for screen readers"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Keyboard Navigation"}),": Ensure all interactive elements are keyboard accessible"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Color Contrast"}),": Maintain sufficient color contrast for readability"]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(e.h3,{id:"custom-component-not-showing",children:"Custom Component Not Showing"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Ensure component is properly exported"}),"\n",(0,i.jsxs)(e.li,{children:["Verify ",(0,i.jsx)(e.code,{children:"customComponents"})," object is passed to ",(0,i.jsx)(e.code,{children:"PageBuilderReact"})]}),"\n",(0,i.jsx)(e.li,{children:"Check that component SVG is valid"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"state-not-persisting",children:"State Not Persisting"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Verify Zustand store is properly initialized"}),"\n",(0,i.jsx)(e.li,{children:"Check that component IDs are unique"}),"\n",(0,i.jsx)(e.li,{children:"Ensure setter functions are called correctly"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"formula-not-calculating",children:"Formula Not Calculating"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Verify ",(0,i.jsx)(e.code,{children:"globalExecuteFunction"})," is passed to component config"]}),"\n",(0,i.jsxs)(e.li,{children:["Check that input ",(0,i.jsx)(e.code,{children:"key"})," matches the function parameter keys"]}),"\n",(0,i.jsxs)(e.li,{children:["Ensure formula return object keys match attribute ",(0,i.jsx)(e.code,{children:"key"})," properties"]}),"\n",(0,i.jsx)(e.li,{children:"Add console logging to debug calculation flow"}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/pmndrs/zustand",children:"Zustand Documentation"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://react.dev/reference/react/forwardRef",children:"React forwardRef Documentation"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://mui.com",children:"Material-UI Documentation"})}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>s});var o=t(6540);const i={},r=o.createContext(i);function a(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),o.createElement(r.Provider,{value:e},n.children)}}}]);