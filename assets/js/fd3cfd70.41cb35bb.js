"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4168],{1992:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/table-component-088ff4817308bfb562e4543fffd1cd87.png"},4562:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"configuration/features/components","title":"Page Builder Components","description":"The Page Builder provides a collection of pre-built components that can be enhanced with dynamic attributes. This guide explores how each component works and how attribute seeding enables data-driven behavior.","source":"@site/docs/configuration/features/components.md","sourceDirName":"configuration/features","slug":"/configuration/features/components","permalink":"/page-builder/docs/configuration/features/components","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Page Builder Components","sidebar_label":"Components Overview"},"sidebar":"docs","previous":{"title":"Dynamic Attributes","permalink":"/page-builder/docs/configuration/features/attributes-formulas"},"next":{"title":"Custom Component","permalink":"/page-builder/docs/configuration/features/custom-components"}}');var l=t(4848),s=t(8453);const r={title:"Page Builder Components",sidebar_label:"Components Overview"},a="Page Builder Components",o={},c=[{value:"Header Component",id:"header-component",level:2},{value:"Overview",id:"overview",level:3},{value:"Structure",id:"structure",level:3},{value:"Editing Header Text",id:"editing-header-text",level:3},{value:"Styling Options",id:"styling-options",level:3},{value:"How Attribute Seeding Works in Headers",id:"how-attribute-seeding-works-in-headers",level:3},{value:"Seeding Process",id:"seeding-process",level:4},{value:"Example: Dynamic Report Header",id:"example-dynamic-report-header",level:4},{value:"Best Practices for Headers",id:"best-practices-for-headers",level:3},{value:"Text Component",id:"text-component",level:2},{value:"Overview",id:"overview-1",level:3},{value:"Structure",id:"structure-1",level:3},{value:"Editing Text Content",id:"editing-text-content",level:3},{value:"Styling Options",id:"styling-options-1",level:3},{value:"How Attribute Seeding Works in Text",id:"how-attribute-seeding-works-in-text",level:3},{value:"Seeding Process",id:"seeding-process-1",level:4},{value:"Example: Dynamic Salary Display",id:"example-dynamic-salary-display",level:4},{value:"Best Practices for Text",id:"best-practices-for-text",level:3},{value:"Table Component",id:"table-component",level:2},{value:"Overview",id:"overview-2",level:3},{value:"Structure",id:"structure-2",level:3},{value:"Adding and Managing Rows",id:"adding-and-managing-rows",level:3},{value:"Adding Rows",id:"adding-rows",level:4},{value:"Adding Columns",id:"adding-columns",level:4},{value:"Editing Cell Content",id:"editing-cell-content",level:3},{value:"Styling Options",id:"styling-options-2",level:3},{value:"How Attribute Seeding Works in Tables",id:"how-attribute-seeding-works-in-tables",level:3},{value:"Step-by-Step Seeding Process",id:"step-by-step-seeding-process",level:4},{value:"Example: Salary Structure Table",id:"example-salary-structure-table",level:4},{value:"Real-Time Updates",id:"real-time-updates",level:4},{value:"Table Management Tips",id:"table-management-tips",level:3},{value:"Best Practices for Tables",id:"best-practices-for-tables",level:3},{value:"Common Attribute Seeding Patterns",id:"common-attribute-seeding-patterns",level:2},{value:"Pattern 1: Input-to-Display",id:"pattern-1-input-to-display",level:3},{value:"Pattern 2: Formula-to-Display",id:"pattern-2-formula-to-display",level:3},{value:"Pattern 3: Multiple Components, Same Attributes",id:"pattern-3-multiple-components-same-attributes",level:3},{value:"Pattern 4: Cascading Updates",id:"pattern-4-cascading-updates",level:3},{value:"Component Configuration Example",id:"component-configuration-example",level:2},{value:"Summary",id:"summary",level:2},{value:"Key Editing Features",id:"key-editing-features",level:3}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"page-builder-components",children:"Page Builder Components"})}),"\n",(0,l.jsx)(n.p,{children:"The Page Builder provides a collection of pre-built components that can be enhanced with dynamic attributes. This guide explores how each component works and how attribute seeding enables data-driven behavior."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"header-component",children:"Header Component"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.strong,{children:"Header component"})," creates prominent titles and headings that can display dynamic content."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.img,{alt:"Header Component",src:t(8193).A+"",width:"1830",height:"965"}),"\n",(0,l.jsx)(n.em,{children:"Header component in the Page Builder with styling options"})]}),"\n",(0,l.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"Headers are perfect for:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Page titles with dynamic dates"}),"\n",(0,l.jsx)(n.li,{children:"Section headings with calculated totals"}),"\n",(0,l.jsx)(n.li,{children:"Dynamic report headers"}),"\n",(0,l.jsx)(n.li,{children:"Status banners with real-time data"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"structure",children:"Structure"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// Header component with dynamic attributes\n{\n  name: 'header',\n  attributes: dynamicAttributes,\n  globalExecuteFunction: calculationFunction\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"editing-header-text",children:"Editing Header Text"}),"\n",(0,l.jsx)(n.p,{children:"To edit the header text content:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Double-click the Header"}),": Click twice on the header element in the canvas"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Edit Inline"}),": The text becomes editable directly in place"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type Your Content"}),": Enter your desired header text"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Click Outside"}),": Click anywhere outside the header to save changes"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"The header text can be plain static text or combined with seeded attribute values for dynamic content."}),"\n",(0,l.jsx)(n.h3,{id:"styling-options",children:"Styling Options"}),"\n",(0,l.jsx)(n.p,{children:"The right panel shows various styling options for headers:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"DISPLAY"}),": Control how the header is displayed (block, inline, etc.)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"WIDTH & HEIGHT"}),": Set dimensions in pixels"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"MARGIN & PADDING"}),": Control spacing around and inside the header"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"BACKGROUND COLOR"}),": Choose the header's background color"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"TEXT ALIGNMENT"}),": Align text left, center, or right"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT FAMILY"}),": Select from available fonts (Arial, etc.)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT SIZE"}),": Set text size in pixels"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT WEIGHT"}),": Control text boldness"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"how-attribute-seeding-works-in-headers",children:"How Attribute Seeding Works in Headers"}),"\n",(0,l.jsx)(n.p,{children:"Headers can display dynamic attribute values as part of the heading text, making them ideal for creating context-aware titles."}),"\n",(0,l.jsx)(n.h4,{id:"seeding-process",children:"Seeding Process"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Select the Header Component"}),": Click on the header element"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access Attribute Tab"}),": Open the attribute configuration panel"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Choose an Attribute"}),": Select which attribute to display in the header"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Dynamic Header"}),": The header now shows the attribute's value"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-dynamic-report-header",children:"Example: Dynamic Report Header"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const headerAttributes: ComponentAttribute[] = [\n  {\n    id: 'report-month',\n    type: 'Input',\n    input_type: 'text',\n    title: 'Report Month',\n    value: 'October 2025',\n    key: 'report_month',\n    execute_order: 1,\n    editable: true,\n  },\n  {\n    id: 'total-revenue',\n    type: 'Formula',\n    input_type: 'number',\n    title: 'Total Revenue',\n    value: '(product_sales + service_revenue)',\n    key: 'total_revenue',\n    execute_order: 2,\n  },\n  {\n    id: 'company-name',\n    type: 'Constant',\n    input_type: 'text',\n    title: 'Company Name',\n    value: 'ABC Corporation',\n    key: 'company_name',\n    execute_order: 1,\n  },\n];\n\n// Configure header component\nconst dynamicComponents = {\n  Basic: [\n    {\n      name: 'header',\n      attributes: headerAttributes,\n      globalExecuteFunction: revenueCalculation,\n    },\n  ],\n  Extra: ['landingpage'],\n};\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Usage Examples:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"[Seed: company_name] - Monthly Report\nRevenue Report for [Seed: report_month]\nTotal Revenue: $[Seed: total_revenue]\n"})}),"\n",(0,l.jsx)(n.p,{children:"When seeded, displays:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"ABC Corporation - Monthly Report\nRevenue Report for October 2025\nTotal Revenue: $125,000\n"})}),"\n",(0,l.jsx)(n.h3,{id:"best-practices-for-headers",children:"Best Practices for Headers"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use for key information"}),": Display important, high-level data"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Keep titles clear"}),": Make headers easily scannable"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Combine constants with dynamics"}),": Mix static company info with dynamic dates"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use appropriate hierarchy"}),": Choose H1, H2, H3 levels appropriately"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Edit text directly"}),": Double-click to quickly update static text"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"text-component",children:"Text Component"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.strong,{children:"Text component"})," displays dynamic text content that can include both static text and dynamic attribute values."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.img,{alt:"Text Component",src:t(5643).A+"",width:"1830",height:"965"}),"\n",(0,l.jsx)(n.em,{children:'Text component showing "Sample Text" with styling options'})]}),"\n",(0,l.jsx)(n.h3,{id:"overview-1",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"Text components are ideal for:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Displaying calculated results in sentences"}),"\n",(0,l.jsx)(n.li,{children:"Dynamic labels and descriptions"}),"\n",(0,l.jsx)(n.li,{children:"Summary statements"}),"\n",(0,l.jsx)(n.li,{children:"Real-time status indicators"}),"\n",(0,l.jsx)(n.li,{children:"Paragraphs and body content"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"structure-1",children:"Structure"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// Text component with dynamic attributes\n{\n  name: 'text',\n  attributes: dynamicAttributes,\n  globalExecuteFunction: calculationFunction\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"editing-text-content",children:"Editing Text Content"}),"\n",(0,l.jsx)(n.p,{children:"To edit the text content:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Double-click the Text Element"}),": Click twice on the text in the canvas"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Edit Inline"}),": The text becomes editable directly"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type Your Content"}),": Enter or modify the text content"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Click Outside"}),": Click anywhere outside to save your changes"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"You can write multiple lines, paragraphs, or combine static text with attribute values."}),"\n",(0,l.jsx)(n.h3,{id:"styling-options-1",children:"Styling Options"}),"\n",(0,l.jsx)(n.p,{children:"The right panel provides comprehensive text styling:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"DISPLAY"}),": Control display type (block, inline, etc.)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"WIDTH & HEIGHT"}),": Set component dimensions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"MARGIN & PADDING"}),": Adjust spacing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"BACKGROUND COLOR"}),": Set background color"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"TEXT ALIGNMENT"}),": Left, center, right, or justify alignment"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT FAMILY"}),": Choose font (Arial, Times New Roman, etc.)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT SIZE"}),": Adjust text size (default: 16px)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT WEIGHT"}),": Normal, bold, or custom weights"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"how-attribute-seeding-works-in-text",children:"How Attribute Seeding Works in Text"}),"\n",(0,l.jsx)(n.p,{children:"Text components can display attribute values inline within text content. Unlike tables, text components typically show a single attribute value or a combination of text and values."}),"\n",(0,l.jsx)(n.h4,{id:"seeding-process-1",children:"Seeding Process"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Select the Text Component"}),": Click on the text element"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Open Attribute Settings"}),": Access the Attribute Tab"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Bind an Attribute"}),": Choose which attribute value to display"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Content Updates"}),": The text displays the attribute's current value"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-dynamic-salary-display",children:"Example: Dynamic Salary Display"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const displayAttributes: ComponentAttribute[] = [\n  {\n    id: 'employee-name',\n    type: 'Input',\n    input_type: 'text',\n    title: 'Employee Name',\n    value: 'John Doe',\n    key: 'employee_name',\n    execute_order: 1,\n    editable: true,\n  },\n  {\n    id: 'net-salary',\n    type: 'Formula',\n    input_type: 'number',\n    title: 'Net Salary',\n    value: '(gross_salary - deductions)',\n    key: 'net_salary',\n    execute_order: 2,\n  },\n];\n\n// Configure text component\nconst dynamicComponents = {\n  Basic: [\n    {\n      name: 'text',\n      attributes: displayAttributes,\n      globalExecuteFunction: salaryCalculation,\n    },\n  ],\n  Extra: ['landingpage'],\n};\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Usage Examples:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Employee: [Seed: employee_name]\nNet Monthly Salary: $[Seed: net_salary]\n"})}),"\n",(0,l.jsx)(n.p,{children:"When seeded, displays:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Employee: John Doe\nNet Monthly Salary: $43296\n"})}),"\n",(0,l.jsx)(n.h3,{id:"best-practices-for-text",children:"Best Practices for Text"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Combine static and dynamic content"}),": Mix regular text with seeded attributes"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use meaningful labels"}),": Provide context for dynamic values"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Format appropriately"}),": Ensure numeric values are properly formatted"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Keep it concise"}),": Text components work best with short, focused content"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Double-click to edit"}),": Quick way to update static content"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"table-component",children:"Table Component"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.strong,{children:"Table component"})," is one of the most powerful components in the Page Builder, designed for displaying structured, tabular data with dynamic attribute binding."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.img,{alt:"Table Component",src:t(1992).A+"",width:"1830",height:"965"}),"\n",(0,l.jsx)(n.em,{children:"Table component showing a 2x2 grid with row and column management buttons"})]}),"\n",(0,l.jsx)(n.h3,{id:"overview-2",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"Tables consist of rows and columns where each cell can be seeded with attributes to display dynamic, calculated values. This makes tables ideal for:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Financial reports and salary structures"}),"\n",(0,l.jsx)(n.li,{children:"Data summaries and dashboards"}),"\n",(0,l.jsx)(n.li,{children:"Invoice templates"}),"\n",(0,l.jsx)(n.li,{children:"Comparison charts"}),"\n",(0,l.jsx)(n.li,{children:"Structured data presentations"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"structure-2",children:"Structure"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// Table component with dynamic attributes\n{\n  name: 'table',\n  attributes: dynamicAttributes,\n  globalExecuteFunction: calculationFunction\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"adding-and-managing-rows",children:"Adding and Managing Rows"}),"\n",(0,l.jsx)(n.p,{children:"The table component provides powerful row management functionality:"}),"\n",(0,l.jsx)(n.h4,{id:"adding-rows",children:"Adding Rows"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Using the Add Row Button"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'Enter the number of rows in the input field (shown as "1" in the image)'}),"\n",(0,l.jsx)(n.li,{children:'Click the green "Add Row" button'}),"\n",(0,l.jsx)(n.li,{children:"New rows are added to the bottom of the table"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Using Row Action Buttons"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Each row has green ",(0,l.jsx)(n.strong,{children:"+"})," (add) and red ",(0,l.jsx)(n.strong,{children:"-"})," (delete) buttons on the right"]}),"\n",(0,l.jsxs)(n.li,{children:["Click the ",(0,l.jsx)(n.strong,{children:"+"})," button to add a new row directly below the current row"]}),"\n",(0,l.jsxs)(n.li,{children:["Click the ",(0,l.jsx)(n.strong,{children:"-"})," button to delete that specific row"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"adding-columns",children:"Adding Columns"}),"\n",(0,l.jsx)(n.p,{children:"Each cell has column management buttons:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Add Column"}),": Click the green ",(0,l.jsx)(n.strong,{children:"+"})," button at the top-right of any cell"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Remove Column"}),": Click the red ",(0,l.jsx)(n.strong,{children:"-"})," button at the top-right of any cell"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Columns are added/removed for the entire table"}),", maintaining table structure"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"editing-cell-content",children:"Editing Cell Content"}),"\n",(0,l.jsx)(n.p,{children:"To edit text in a table cell:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Double-click the Cell"}),": Click twice on any cell content"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Edit Inline"}),": The cell text becomes editable"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type Your Content"}),": Enter your text or labels"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Click Outside"}),": Click outside the cell to save"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:'You can enter static labels (like "Basic Salary", "HRA", "Total") or seed dynamic attribute values.'}),"\n",(0,l.jsx)(n.h3,{id:"styling-options-2",children:"Styling Options"}),"\n",(0,l.jsx)(n.p,{children:"The right panel shows table cell styling options:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"DISPLAY"}),": Control cell display properties"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"WIDTH & HEIGHT"}),": Set cell dimensions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"MARGIN & PADDING"}),": Control cell spacing (padding: 8px shown)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"BACKGROUND COLOR"}),": Set cell background (black shown in image)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"TEXT ALIGNMENT"}),": Align cell content"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT FAMILY"}),": Choose cell font"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT SIZE"}),": Set text size (16px default)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"FONT WEIGHT"}),": Control text weight"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"how-attribute-seeding-works-in-tables",children:"How Attribute Seeding Works in Tables"}),"\n",(0,l.jsxs)(n.p,{children:["Attribute seeding in tables creates a ",(0,l.jsx)(n.strong,{children:"live connection"})," between table cells and attribute values. When an attribute value changes, all seeded cells automatically update."]}),"\n",(0,l.jsx)(n.h4,{id:"step-by-step-seeding-process",children:"Step-by-Step Seeding Process"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Select a Table Cell"}),": Click on any cell in your table to select it"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Open Attribute Settings"}),': Click the "Set table-cell-content Attribute" button in the Attribute Tab']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Choose an Attribute"}),": A modal appears showing all available attributes by their ",(0,l.jsx)(n.code,{children:"title"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Bind the Attribute"}),": Select an attribute to bind it to the cell"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Save"}),": The cell now displays the attribute's value"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.img,{alt:"Attribute Seeding Modal",src:t(4834).A+"",width:"1592",height:"894"}),"\n",(0,l.jsx)(n.em,{children:"Modal showing available attributes for seeding"})]}),"\n",(0,l.jsx)(n.h4,{id:"example-salary-structure-table",children:"Example: Salary Structure Table"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const salaryAttributes: ComponentAttribute[] = [\n  {\n    id: 'basic-input',\n    type: 'Input',\n    input_type: 'number',\n    title: 'Basic Salary',\n    value: 50000,\n    key: 'basic_salary',\n    execute_order: 1,\n    editable: true,\n  },\n  {\n    id: 'hra-formula',\n    type: 'Formula',\n    input_type: 'number',\n    title: 'HRA Amount',\n    value: '(basic_salary * 0.15)',\n    key: 'hra_amount',\n    execute_order: 2,\n  },\n  {\n    id: 'total-formula',\n    type: 'Formula',\n    input_type: 'number',\n    title: 'Total Salary',\n    value: '(basic_salary + hra_amount)',\n    key: 'total_salary',\n    execute_order: 3,\n  },\n];\n\n// Configure table component\nconst dynamicComponents = {\n  Basic: [\n    {\n      name: 'table',\n      attributes: salaryAttributes,\n      globalExecuteFunction: salaryCalculation,\n    },\n  ],\n  Extra: ['landingpage'],\n};\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Table Layout Example:"})}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Component"}),(0,l.jsx)(n.th,{children:"Amount"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Basic Salary"}),(0,l.jsxs)(n.td,{children:["\u2192 Seed: ",(0,l.jsx)(n.code,{children:"basic_salary"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"HRA (15%)"}),(0,l.jsxs)(n.td,{children:["\u2192 Seed: ",(0,l.jsx)(n.code,{children:"hra_amount"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Total Salary"}),(0,l.jsxs)(n.td,{children:["\u2192 Seed: ",(0,l.jsx)(n.code,{children:"total_salary"})]})]})]})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Creating this table:"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Start with a 3x2 table (3 rows, 2 columns)"}),"\n",(0,l.jsx)(n.li,{children:'Double-click first column cells and enter labels: "Basic Salary", "HRA (15%)", "Total Salary"'}),"\n",(0,l.jsx)(n.li,{children:"Select the second column cells one by one"}),"\n",(0,l.jsx)(n.li,{children:"Seed each cell with the corresponding attribute"}),"\n",(0,l.jsx)(n.li,{children:"When users change the Basic Salary input, all cells update automatically"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"real-time-updates",children:"Real-Time Updates"}),"\n",(0,l.jsx)(n.p,{children:'When a user modifies the "Basic Salary" input:'}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.code,{children:"globalExecuteFunction"})," recalculates HRA and Total"]}),"\n",(0,l.jsx)(n.li,{children:"All seeded cells update automatically"}),"\n",(0,l.jsx)(n.li,{children:"The table reflects the new values instantly"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"table-management-tips",children:"Table Management Tips"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Start with structure"}),": Plan your rows and columns before seeding"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use the input field"}),': Add multiple rows at once using the "Add Row" input']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Row-by-row addition"}),": Use the green + button for precise row placement"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Column management"}),": Add/remove columns as needed for each cell"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Edit labels first"}),": Double-click cells to add static labels before seeding"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Seed values after"}),": Once labels are in place, seed the data cells"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"best-practices-for-tables",children:"Best Practices for Tables"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Organize by calculation order"}),": Place input values in top rows, calculated values below"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Use clear labels"}),": Make column headers and row labels descriptive"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Seed formulas appropriately"}),": Bind the correct attribute to each cell"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Format numbers"}),": Use ",(0,l.jsx)(n.code,{children:"input_type: 'number'"})," for numeric attributes"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Test interactivity"}),": Verify that changing inputs updates all seeded cells"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Manage rows efficiently"}),": Use the bulk add feature for multiple rows"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"common-attribute-seeding-patterns",children:"Common Attribute Seeding Patterns"}),"\n",(0,l.jsx)(n.h3,{id:"pattern-1-input-to-display",children:"Pattern 1: Input-to-Display"}),"\n",(0,l.jsx)(n.p,{children:"Seed an Input attribute directly to display user-entered values:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'// In Attribute Tab: User enters "50000"\n// In Table Cell: Displays "50000"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"pattern-2-formula-to-display",children:"Pattern 2: Formula-to-Display"}),"\n",(0,l.jsx)(n.p,{children:"Seed a Formula attribute to show calculated results:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'// Formula calculates: basic_salary * 0.15\n// In Table Cell: Displays "7500"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"pattern-3-multiple-components-same-attributes",children:"Pattern 3: Multiple Components, Same Attributes"}),"\n",(0,l.jsx)(n.p,{children:"Reuse the same attributes across multiple components:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const sharedAttributes = [...];\n\nconst dynamicComponents = {\n  Basic: [\n    { name: 'header', attributes: sharedAttributes, globalExecuteFunction: calc },\n    { name: 'text', attributes: sharedAttributes, globalExecuteFunction: calc },\n    { name: 'table', attributes: sharedAttributes, globalExecuteFunction: calc }\n  ]\n};\n"})}),"\n",(0,l.jsx)(n.p,{children:"All three components share the same attribute values and update together."}),"\n",(0,l.jsx)(n.h3,{id:"pattern-4-cascading-updates",children:"Pattern 4: Cascading Updates"}),"\n",(0,l.jsx)(n.p,{children:"Seed attributes in order of calculation dependency:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// Table Structure:\n// Row 1: Basic Salary [input] - Double-click to edit label, seed attribute\n// Row 2: HRA [formula using basic_salary] - Seed formula attribute\n// Row 3: Total [formula using basic_salary + hra] - Seed total formula\n\n// When Row 1 changes:\n// - Row 2 recalculates automatically\n// - Row 3 recalculates using new Row 2 value\n// - All updates happen in execute_order sequence\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"component-configuration-example",children:"Component Configuration Example"}),"\n",(0,l.jsx)(n.p,{children:"Here's a complete example configuring all three components with shared attributes:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { PageBuilderReact, ComponentAttribute } from '@mindfiredigital/page-builder-react';\nimport { globalCalculation } from './utils/calculations';\n\nconst App = () => {\n  // Shared attributes for all components\n  const sharedAttributes: ComponentAttribute[] = [\n    {\n      id: 'input-value',\n      type: 'Input',\n      input_type: 'number',\n      title: 'Input Value',\n      value: 100,\n      key: 'input_value',\n      execute_order: 1,\n      editable: true,\n      default_value: 100\n    },\n    {\n      id: 'multiplier',\n      type: 'Constant',\n      input_type: 'number',\n      title: 'Multiplier',\n      value: 2.5,\n      key: 'multiplier',\n      execute_order: 1\n    },\n    {\n      id: 'result',\n      type: 'Formula',\n      input_type: 'number',\n      title: 'Result',\n      value: '(input_value * multiplier)',\n      key: 'result',\n      execute_order: 2\n    }\n  ];\n\n  const dynamicComponents = {\n    Basic: [\n      { name: 'button' },\n      {\n        name: 'header',\n        attributes: sharedAttributes,\n        globalExecuteFunction: globalCalculation\n      },\n      {\n        name: 'text',\n        attributes: sharedAttributes,\n        globalExecuteFunction: globalCalculation\n      },\n      {\n        name: 'table',\n        attributes: sharedAttributes,\n        globalExecuteFunction: globalCalculation\n      }\n    ],\n    Extra: ['landingpage']\n  };\n\n  return (\n    <div>\n      <PageBuilderReact\n        config={dynamicComponents}\n        showAttributeTab={true}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,l.jsx)(n.p,{children:"The Page Builder's component system enables powerful data-driven interfaces through attribute seeding:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Header Component"}),": Create dynamic titles with inline text editing (double-click)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Text Component"}),": Display dynamic values within text content with inline editing (double-click)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Table Component"}),": Display structured data with:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Cell-level attribute binding"}),"\n",(0,l.jsx)(n.li,{children:"Dynamic row addition (bulk or individual)"}),"\n",(0,l.jsx)(n.li,{children:"Column management per cell"}),"\n",(0,l.jsx)(n.li,{children:"Inline cell editing (double-click)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"key-editing-features",children:"Key Editing Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Double-click to edit"}),": All components support inline text editing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Row management"}),": Tables support bulk row addition and row-by-row controls"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Column controls"}),": Add/remove columns using cell-level buttons"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Style customization"}),": Comprehensive styling options in the right panel"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"All components share the same attribute system, making it easy to create consistent, synchronized interfaces where changes propagate automatically across all seeded elements."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},4834:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/attribute-modal-76bcf7dcaf434ed62279bf73ca3bd289.png"},5643:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/text-component-6f48ee623af4f0c0e1ac68cadcc7b9ac.png"},8193:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/header-component-4e42c12e702e050de028a39a70ebffc9.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const l={},s=i.createContext(l);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);