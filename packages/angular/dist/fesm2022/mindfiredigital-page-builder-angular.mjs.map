{"version":3,"file":"mindfiredigital-page-builder-angular.mjs","sources":["../../src/lib/page-builder-angular.component.ts","../../src/lib/page-builder-angular.module.ts","../../src/public-api.ts","../../src/mindfiredigital-page-builder-angular.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Type,\n  ComponentRef,\n  CUSTOM_ELEMENTS_SCHEMA,\n  ApplicationRef,\n  Injector,\n  EnvironmentInjector,\n  createComponent,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Define the interface for the custom components\nexport interface PageBuilderCustomComponent {\n  component: Type<any>;\n  svg: string;\n  title: string;\n  settingsComponent?: Type<any>;\n}\n\n// Define the interface for the main page builder config\ninterface DynamicComponents {\n  Basic: any[];\n  Extra: any[];\n  Custom: Record<\n    string,\n    {\n      component: string;\n      svg: string;\n      title: string;\n      settingsComponent?: string;\n    }\n  >;\n}\n\n@Component({\n  selector: 'mf-page-builder',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<page-builder #pageBuilderEl></page-builder>`,\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class PageBuilderComponent implements AfterViewInit {\n  @Input() config!: DynamicComponents;\n  @Input() customComponents: Record<string, PageBuilderCustomComponent> = {};\n\n  @ViewChild('pageBuilderEl') pageBuilderEl!: ElementRef<HTMLElement>;\n\n  // Correctly inject dependencies in the constructor\n  constructor(\n    private injector: Injector,\n    private appRef: ApplicationRef,\n    private envInjector: EnvironmentInjector\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.processCustomComponents();\n  }\n\n  private processCustomComponents(): void {\n    const processedConfig: DynamicComponents = {\n      ...this.config,\n      Custom: this.config?.Custom || {},\n    };\n\n    Object.entries(this.customComponents).forEach(([key, componentConfig]) => {\n      const tagName = `ng-component-${key.toLowerCase()}`;\n\n      if (!customElements.get(tagName)) {\n        // Capture the injected dependencies from the parent component's scope.\n        const injector = this.injector;\n        const appRef = this.appRef;\n        const envInjector = this.envInjector;\n\n        // The class accesses the captured dependencies via closure\n        class AngularHostElement extends HTMLElement {\n          private componentRef: ComponentRef<any> | null = null;\n\n          connectedCallback() {\n            // Create the component in-place using the captured dependencies\n            this.componentRef = createComponent(componentConfig.component, {\n              environmentInjector: envInjector,\n              elementInjector: injector,\n              hostElement: this,\n            });\n\n            // Attach change detection\n            appRef.attachView(this.componentRef.hostView);\n\n            // Append the component's root node into this custom element\n            this.appendChild(this.componentRef.location.nativeElement);\n          }\n\n          disconnectedCallback() {\n            if (this.componentRef) {\n              appRef.detachView(this.componentRef.hostView);\n              this.componentRef.destroy();\n              this.componentRef = null;\n            }\n          }\n        }\n\n        customElements.define(tagName, AngularHostElement);\n      }\n\n      processedConfig.Custom[key] = {\n        component: tagName,\n        svg: componentConfig.svg,\n        title: componentConfig.title,\n      };\n    });\n\n    this.pageBuilderEl.nativeElement.setAttribute(\n      'config-data',\n      JSON.stringify(processedConfig)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PageBuilderComponent } from './page-builder-angular.component';\n\n@NgModule({\n  imports: [PageBuilderComponent],\n  exports: [PageBuilderComponent],\n})\nexport class PageBuilderModule {}\n","export * from './lib/page-builder-angular.component';\nexport * from './lib/page-builder-angular.module';\nexport const PAGE_BUILDER_STYLES = './lib/styles/_styles.scss';\nexport * from './lib/models/custom-styles.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}